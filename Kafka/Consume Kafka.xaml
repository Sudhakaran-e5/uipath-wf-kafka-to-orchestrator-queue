<Activity mc:Ignorable="sap sap2010" x:Class="Consume_Kafka" this:Consume_Kafka.QueueName="TestSudhakar" this:Consume_Kafka.QueueFolderName="Dev" this:Consume_Kafka.ConsumerKafkaTopic="test-accordcare" this:Consume_Kafka.KafkaGroupName="New" this:Consume_Kafka.ConsumerServerEndpoint="b-1.duploservicesbase02e5n.vk7wns.c8.kafka.us-west-2.amazonaws.com:9092,b-2.duploservicesbase02e5n.vk7wns.c8.kafka.us-west-2.amazonaws.com:9092" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ck="clr-namespace:Confluent.Kafka;assembly=Confluent.Kafka" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sr="clr-namespace:System.Reflection;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="QueueName" Type="InArgument(x:String)" />
    <x:Property Name="QueueFolderName" Type="InArgument(x:String)" />
    <x:Property Name="ConsumerKafkaTopic" Type="InArgument(x:String)" />
    <x:Property Name="KafkaGroupName" Type="InArgument(x:String)" />
    <x:Property Name="ConsumerServerEndpoint" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1488,2439</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Consume_Kafka_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="68">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Confluent.Kafka</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="27">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Confluent.Kafka</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Consume_Kafka" sap:VirtualizedContainerService.HintSize="844,2374" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="802,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Consume kafka started&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="802,2151" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="MessageDeliveredStatus" />
        <Variable x:TypeArguments="x:String" Name="KafkaConsumedMessage" />
        <Variable x:TypeArguments="x:Boolean" Name="AddedToQueue" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="764,1902" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="ck:IConsumer(ck:Ignore, x:String)" Name="KafkaConsumerObject" />
            <Variable x:TypeArguments="x:String" Name="ObjectString" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InterruptibleWhile Condition="True" DisplayName="While" sap:VirtualizedContainerService.HintSize="722,1810" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
            <ui:InterruptibleWhile.Body>
              <TryCatch sap:VirtualizedContainerService.HintSize="686,1645" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                <TryCatch.Try>
                  <Sequence DisplayName="Conume Message" sap:VirtualizedContainerService.HintSize="648,1418" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="CommitMessageStatus" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="try{&#xA;&#x9;Library.Load(&quot;.\\Kafka\\kafka-library\\librdkafka.dll&quot;);&#xA;&#x9;if(Library.IsLoaded)&#xA;&#x9;{&#xA;&#x9;&#x9;var conf = new ConsumerConfig&#xA;            {&#xA;                BootstrapServers = ServerEndpoint,&#xA;&#x9;&#x9;&#x9;&#x9;AutoOffsetReset = AutoOffsetReset.Earliest,&#xA;                GroupId = GroupName,&#xA;                EnableAutoCommit = false&#xA;            };&#xA;            using (var consumer = new ConsumerBuilder&lt;Ignore, string&gt;(conf).Build())&#xA;            {&#xA;                consumer.Subscribe(Topic);&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Consume started&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;var cr = consumer.Consume();&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Consume ended&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;var kafkaMessage= cr.Value;&#xA;&#x9;&#x9;&#x9;&#x9;consumedMessage = kafkaMessage;&#xA;&#x9;&#x9;&#x9;&#x9;try{&#xA;&#x9;&#x9;&#x9;&#x9;    consumer.Commit(cr);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}catch(Exception e){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    Console.WriteLine(&quot;Error while commiting consumed kafka message&quot;,  e.InnerException);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    commitConsumedMessage = &quot;Failed&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;Console.WriteLine(&quot;Kafka Lib not loaded&quot;);&#xA;&#x9;&#x9;throw new BusinessRuleException(&quot;LOAD_KAFKA_LIBRARY_FAILED&quot;);&#xA;&#x9;}&#xA;}catch(Exception e) {&#xA;&#x9;Console.WriteLine(&quot;Error while consuming kafka message&quot;,  e.InnerException);&#xA;&#x9;throw new BusinessRuleException(&quot;CONSUME_KAFKA_MESSAGE_FAILED&quot;);&#xA;}" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="606,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="ServerEndpoint">[ConsumerServerEndpoint]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Topic">[ConsumerKafkaTopic]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="GroupName">[KafkaGroupName]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="consumedMessage">[KafkaConsumedMessage]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="commitConsumedMessage">[CommitMessageStatus]</OutArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="606,1122" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="568,895" sap2010:WorkflowViewState.IdRef="RetryScope_1">
                          <ui:RetryScope.ActivityBody>
                            <ActivityAction>
                              <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="526,677" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Offset Message: &quot;+KafkaConsumedMessage.ToString]" />
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Consumed commit message status: &quot;+CommitMessageStatus]" />
                                <If Condition="[String.IsNullOrWhiteSpace(KafkaConsumedMessage) or CommitMessageStatus = &quot;Failed&quot;]" sap:VirtualizedContainerService.HintSize="484,223" sap2010:WorkflowViewState.IdRef="If_1">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Skip add to queue due to empty value or commit failed&quot;]" />
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Task not added to queue due to commit failed or empty value: &quot;+KafkaConsumedMessage.ToString]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="[QueueFolderName]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_2" Priority="Normal" QueueType="[QueueName]">
                                      <ui:AddQueueItem.ItemInformation>
                                        <InArgument x:TypeArguments="x:String" x:Key="task">[KafkaConsumedMessage]</InArgument>
                                      </ui:AddQueueItem.ItemInformation>
                                    </ui:AddQueueItem>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[AddedToQueue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </ui:RetryScope.ActivityBody>
                          <ui:RetryScope.Condition>
                            <ActivityFunc x:TypeArguments="x:Boolean">
                              <ui:IsMatch DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[AddedToQueue.ToString.ToLower]" IsBuilderTabModified="False" Pattern="true" RegexOption="IgnoreCase, Compiled" />
                            </ActivityFunc>
                          </ui:RetryScope.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:RetryScope>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="572,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Task not added to queue: &quot;+KafkaConsumedMessage.ToString]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="652,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Error swolled&quot;+exception.Message]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </ui:InterruptibleWhile.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InterruptibleWhile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="768,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Error in consumed kafka message&quot;]" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="sr:TargetInvocationException" sap:VirtualizedContainerService.HintSize="768,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="sr:TargetInvocationException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sr:TargetInvocationException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Error in consuming kafka message&quot;]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>